package org.sagebionetworks.bridge.models.studies;

import org.testng.annotations.Test;

import org.sagebionetworks.bridge.json.BridgeObjectMapper;

import static org.testng.Assert.assertEquals;
import static org.testng.Assert.assertNull;

import com.fasterxml.jackson.databind.ObjectMapper;

public class MimeTypeTest {

    @Test
    public void canDeserializeAutogeneratedMimeTypes() throws Exception {
        ObjectMapper mapper = BridgeObjectMapper.get();
        
        MimeType deser = mapper.readValue("\"pdf\"", MimeType.class);
        assertEquals(deser, MimeType.PDF);
        
        deser = mapper.readValue("\"application/pdf\"", MimeType.class);
        assertEquals(deser, MimeType.PDF);
        
        deser = mapper.readValue("\"HTML\"", MimeType.class);
        assertEquals(deser, MimeType.HTML);
        
        deser = mapper.readValue("\"text/html\"", MimeType.class);
        assertEquals(deser, MimeType.HTML);
        
        deser = mapper.readValue("\"TEXT/PLAIN\"", MimeType.class);
        assertEquals(deser, MimeType.TEXT);
    }
    
    @Test
    public void serializationUsesMimeTypeValue() throws Exception {
        ObjectMapper mapper = BridgeObjectMapper.get();
        
        assertEquals(mapper.writeValueAsString(MimeType.HTML), "\"text/html\"");
        assertEquals(mapper.writeValueAsString(MimeType.TEXT), "\"text/plain\"");
        assertEquals(mapper.writeValueAsString(MimeType.PDF), "\"application/pdf\"");
    }
    
    /**
     * Test that serialization works with a normal ObjectMapper, not just BridgeObjectMapper.
     */
    @Test
    public void canSerializeWithNormalObjectMaper() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        
        String json = mapper.writeValueAsString(MimeType.HTML);
        
        MimeType type = mapper.readValue(json, MimeType.class);
        
        assertEquals(type, MimeType.HTML);
    }
    
    @Test
    public void nullDoesNotBreakDeserialization() throws Exception {
        assertNull(BridgeObjectMapper.get().readValue("\"\"", MimeType.class));
    }
}
